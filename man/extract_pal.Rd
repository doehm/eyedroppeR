% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eyedropper.R
\name{extract_pal}
\alias{extract_pal}
\title{Extracts palette from an image}
\usage{
extract_pal(
  n,
  img_path,
  label = NULL,
  sort = "auto",
  plot_output = TRUE,
  save_output = FALSE,
  print_output = TRUE,
  swatch_radius = 50
)
}
\arguments{
\item{n}{Number of colours to extract}

\item{img_path}{Path to image. If `NULL` the function will read from the clipboard}

\item{label}{Label for the palette.}

\item{sort}{Sort method. Either 'manual' or 'auto'}

\item{plot_output}{logical. Default \code{TRUE}. Plots the output of the extracted palette.}

\item{save_output}{logical. Default \code{FALSE}. Save the output of the extracted palette.}

\item{print_output}{Print output to console to easily copy and paste into your script.}

\item{swatch_radius}{Radius of the image for the swatch. Default 50 to make it a circle. Use 5 for rounded edges.}
}
\value{
Returns a character vector of hex codes
}
\description{
The image is read in using \code{magick}, converted to RGB and clustered using kmeans. The user
must specify the number of clusters. The cluster centroids become the palette values.
The function will ask the user to sort the palette values after clustering
}
\examples{
path <- file.path(system.file(package = "eyedroppeR"), "images", "sunset.png")

\dontrun{
extract_pal(8, path)
}
}
